--- lirc-0.6.6-orig/drivers/lirc_i2c/lirc_i2c.c	Thu Sep 26 21:17:15 2002
+++ lirc-0.6.6-i2c/drivers/lirc_i2c/lirc_i2c.c	Sat Aug 23 11:45:57 2003
@@ -229,21 +229,11 @@
 
 static void set_use_inc(void* data)
 {
-	struct IR *ir = data;
-
-	/* lock bttv in memory while /dev/lirc is in use  */
-	if (ir->c.adapter->inc_use) 
-		ir->c.adapter->inc_use(ir->c.adapter);
-
 	MOD_INC_USE_COUNT;
 }
 
 static void set_use_dec(void* data)
 {
-	struct IR *ir = data;
-
-	if (ir->c.adapter->dec_use) 
-		ir->c.adapter->dec_use(ir->c.adapter);
 	MOD_DEC_USE_COUNT;
 }
 
@@ -262,12 +252,13 @@
 static int ir_command(struct i2c_client *client, unsigned int cmd, void *arg);
 
 static struct i2c_driver driver = {
-        name:           "i2c ir driver",
-        id:             I2C_DRIVERID_EXP3, /* FIXME */
-        flags:          I2C_DF_NOTIFY,
-        attach_adapter: ir_probe,
-        detach_client:  ir_detach,
-        command:        ir_command,
+	.owner            = THIS_MODULE,
+	.name             = "i2c ir driver",
+	.id               = I2C_DRIVERID_EXP3, /* FIXME */
+	.flags            = I2C_DF_NOTIFY,
+	.attach_adapter   = ir_probe,
+	.detach_client    = ir_detach,
+	.command          = ir_command,
 };
 
 static struct i2c_client client_template = 
@@ -331,8 +322,6 @@
 	/* register device */
 	i2c_attach_client(&ir->c);
 	ir->l.minor = lirc_register_plugin(&ir->l);
-	if (ir->c.adapter->inc_use)
-		ir->c.adapter->inc_use(ir->c.adapter);
 	
 	return 0;
 }
@@ -342,8 +331,6 @@
         struct IR *ir = client->data;
 	
 	/* unregister device */
-	if (ir->c.adapter->dec_use)
-		ir->c.adapter->dec_use(ir->c.adapter);
 	lirc_unregister_plugin(ir->l.minor);
 	i2c_detach_client(&ir->c);
 
