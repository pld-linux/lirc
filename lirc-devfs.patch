diff -urN lirc-0.6.6.org/drivers/lirc_it87/lirc_it87.c lirc-0.6.6/drivers/lirc_it87/lirc_it87.c
--- lirc-0.6.6.org/drivers/lirc_it87/lirc_it87.c	Thu May  1 23:25:29 2003
+++ lirc-0.6.6/drivers/lirc_it87/lirc_it87.c	Thu May  1 23:35:49 2003
@@ -31,6 +31,10 @@
 #include <linux/version.h>
 #include <linux/module.h>
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,0)
+#define LIRC_HAVE_DEVFS
+#endif
+
 #ifdef HAVE_CONFIG_H
 # include <config.h>
 #endif
@@ -54,6 +58,10 @@
 #include <linux/mm.h>
 #include <linux/delay.h>
 #include <linux/poll.h>
+#ifdef LIRC_HAVE_DEVFS
+#include <linux/devfs_fs_kernel.h>
+#endif
+
 #include <asm/system.h>
 #include <asm/segment.h>
 #include <asm/io.h>
@@ -383,7 +391,11 @@
 {
 	int retval;
 	
+#ifndef LIRC_HAVE_DEVFS
 	retval = register_chrdev(major,
+#else
+	retval = devfs_register_chrdev(major,
+#endif
 				 LIRC_DRIVER_NAME,
 				 &lirc_fops);
 	if (retval < 0) {
@@ -396,8 +408,13 @@
 
 static void drop_chrdev(void)
 {
+#ifndef LIRC_HAVE_DEVFS
 	unregister_chrdev(major,
 			  LIRC_DRIVER_NAME);
+#else
+	devfs_unregister_chrdev(major,
+	    		  LIRC_DRIVER_NAME);
+#endif
 }
 #endif
 
diff -urN lirc-0.6.6.org/drivers/lirc_parallel/lirc_parallel.c lirc-0.6.6/drivers/lirc_parallel/lirc_parallel.c
--- lirc-0.6.6.org/drivers/lirc_parallel/lirc_parallel.c	Thu May  1 23:25:29 2003
+++ lirc-0.6.6/drivers/lirc_parallel/lirc_parallel.c	Thu May  1 23:32:39 2003
@@ -44,6 +44,10 @@
 #define KERNEL_2_4
 #endif
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,0)
+#define LIRC_HAVE_DEVFS
+#endif
+
 #ifdef CONFIG_SMP
 #error "--- Sorry, this driver is not SMP safe. ---"
 #endif
@@ -59,6 +63,9 @@
 #include <linux/time.h>
 #include <linux/mm.h>
 #include <linux/delay.h>
+#ifdef LIRC_HAVE_DEVFS
+#include <linux/devfs_fs_kernel.h>
+#endif
 
 #include <asm/io.h>
 #include <asm/signal.h>
@@ -882,7 +889,11 @@
 	parport_release(ppdevice);
  skip_init:
 #endif
+#ifndef LIRC_HAVE_DEVFS
 	if(register_chrdev(LIRC_MAJOR, LIRC_DRIVER_NAME, &lirc_fops)<0)
+#else
+	if(devfs_register_chrdev(LIRC_MAJOR, LIRC_DRIVER_NAME, &lirc_fops)<0)
+#endif
 	{
 		printk(KERN_NOTICE "%s: register_chrdev() failed\n",LIRC_DRIVER_NAME);
 #ifdef KERNEL_2_2
@@ -904,6 +915,10 @@
 #else
 	release_region(io,LIRC_PORT_LEN);
 #endif
+#ifndef LIRC_HAVE_DEVFS
 	unregister_chrdev(LIRC_MAJOR,LIRC_DRIVER_NAME);
+#else
+	devfs_unregister_chrdev(LIRC_MAJOR,LIRC_DRIVER_NAME);
+#endif
 }
 #endif
diff -urN lirc-0.6.6.org/drivers/lirc_serial/lirc_serial.c lirc-0.6.6/drivers/lirc_serial/lirc_serial.c
--- lirc-0.6.6.org/drivers/lirc_serial/lirc_serial.c	Thu May  1 23:25:29 2003
+++ lirc-0.6.6/drivers/lirc_serial/lirc_serial.c	Thu May  1 23:30:53 2003
@@ -66,6 +66,11 @@
 #define LIRC_LOOPS_PER_JIFFY
 #endif
 
+#include <linux/version.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,0)
+#define LIRC_HAVE_DEVFS
+#endif
+
 #include <linux/config.h>
 
 #ifndef CONFIG_SERIAL_MODULE
@@ -96,6 +101,9 @@
 #ifdef KERNEL_2_1
 #include <linux/poll.h>
 #endif
+#ifdef LIRC_HAVE_DEVFS
+#include <linux/devfs_fs_kernel.h>
+#endif
 
 #include <asm/system.h>
 #include <asm/segment.h>
@@ -1306,7 +1314,12 @@
 	}
 	if ((result = init_port()) < 0)
 		return result;
+
+#ifndef LIRC_HAVE_DEVFS	
 	if (register_chrdev(major, LIRC_DRIVER_NAME, &lirc_fops) < 0) {
+#else
+	if (devfs_register_chrdev(major, LIRC_DRIVER_NAME, &lirc_fops) < 0) {
+#endif
 		printk(KERN_ERR  LIRC_DRIVER_NAME  
 		       ": register_chrdev failed!\n");
 		release_region(io, 8);
@@ -1318,7 +1331,11 @@
 void cleanup_module(void)
 {
 	release_region(io, 8);
+#ifndef LIRC_HAVE_DEVFS
 	unregister_chrdev(major, LIRC_DRIVER_NAME);
+#else
+	devfs_unregister_chrdev(major, LIRC_DRIVER_NAME);
+#endif
 #       ifdef DEBUG
 	printk(KERN_INFO  LIRC_DRIVER_NAME  ": cleaned up module\n");
 #       endif
diff -urN lirc-0.6.6.org/drivers/lirc_sir/lirc_sir.c lirc-0.6.6/drivers/lirc_sir/lirc_sir.c
--- lirc-0.6.6.org/drivers/lirc_sir/lirc_sir.c	Thu May  1 23:25:29 2003
+++ lirc-0.6.6/drivers/lirc_sir/lirc_sir.c	Thu May  1 23:33:54 2003
@@ -43,6 +43,9 @@
 #else
 #define KERNEL_2_0
 #endif
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,0)
+#define LIRC_HAVE_DEVFS
+#endif
 
 #include <linux/module.h>
 
@@ -79,6 +82,10 @@
 #ifdef KERNEL_2_1
 #include <linux/poll.h>
 #endif
+#ifdef LIRC_HAVE_DEVFS
+#include <linux/devfs_fs_kernel.h>
+#endif
+
 #include <asm/system.h>
 #include <asm/segment.h>
 #include <asm/io.h>
@@ -620,7 +627,11 @@
 {
 	int retval;
 
+#ifndef LIRC_HAVE_DEVFS
 	retval = register_chrdev(major, LIRC_DRIVER_NAME, &lirc_fops);
+#else
+	retval = devfs_register_chrdev(major, LIRC_DRIVER_NAME, &lirc_fops);
+#endif
 	if (retval < 0) {
 		printk(KERN_ERR LIRC_DRIVER_NAME ": init_chrdev() failed.\n");
 		return retval;
@@ -630,7 +641,11 @@
 
 static void drop_chrdev(void)
 {
+#ifndef LIRC_HAVE_DEVFS
 	unregister_chrdev(major, LIRC_DRIVER_NAME);
+#else
+	devfs_unregister_chrdev(major, LIRC_DRIVER_NAME);
+#endif
 }
 #endif
 
