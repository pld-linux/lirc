#!/bin/sh  
#
# lircd		Linux Infrared Remote Control daemon
#
# chkconfig:	2345 65 35
# description:  LIRC is a package that allows you to decode and send
#		infra-red signals of many (but not all) commonly used
#		remote controls.
#
# processname:	lircd
# pidfile:	/var/run/lircd.pid
# config:	/etc/lircd.conf
# config:	/etc/sysconfig/lircd

# Source function library
. /etc/rc.d/init.d/functions

# Get service config
[ -f /etc/sysconfig/lircd ] && . /etc/sysconfig/lircd

# See how we were called.
case "$1" in
  start)
        # Check if the service is already running?
        if [ ! -f /var/lock/subsys/lircd ]; then
                msg_starting "Linux Infrared Remote Control daemon"
		OPTIONS=""
		[ -n "$DRIVER" ] && OPTIONS="--driver=$DRIVER"
		[ -n "$DEVICE" ] && OPTIONS="$OPTIONS --device=$DEVICE"
		if [ ! -n "$DEVICE" ]; then
		    [ ! -e /dev/lirc ] && mknod /dev/lirc c 61 0
		else
		    if [ -d /dev/vc ] && [ ! -d /dev/lirc ] ; then
			mkdir /dev/lirc
		    fi
		    [ ! -e $DEVICE ] && mknod $DEVICE c 61 0
		fi
                daemon lircd $OPTIONS
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/lircd
        else
                msg_Already_Running "Linux Infrared Remote Control daemon"
		exit 1
        fi
        ;;
  stop)
	# Stop daemons.
        if [ -f /var/lock/subsys/lircd ]; then
		msg_stopping "Linux Infrared Remote Control daemon"
		killproc lircd
		rm -f /var/lock/subsys/lircd >/dev/null 2>&1
	else
		msg_Not_Running "Linux Infrared Remote Control daemon"
                exit 1
        fi
        ;;
  status)
        status lircd
        ;;
  restart)
	test -f /var/lock/subsys/lircmd && RESTART_LIRCMD=yes
	test -n "$RESTART_LIRCMD" && /etc/rc.d/init.d/lircmd stop
        $0 stop
        $0 start
	test -n "$RESTART_LIRCMD" && /etc/rc.d/init.d/lircmd start
        ;;
  reload)
	msg_reloading "Linux Infrared Remote Control daemon"
	killproc lircd -HUP
	;;
  *)
        msg_Usage "$0 {start|stop|status|restart|reload}"
        exit 1
	;;
esac

exit $RETVAL
